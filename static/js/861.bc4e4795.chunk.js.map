{"version":3,"file":"static/js/861.bc4e4795.chunk.js","mappings":"kJACA,MAA0B,yBAA1B,EAAkE,8BAAlE,EAAuM,0B,oBCAvM,EAAyB,6B,SCGnBA,EAAY,SAAC,GAAD,SAAGC,SAA0BC,EAAW,IAS1D,EARoB,SAAAC,GAClB,OACE,0BACE,SAAC,KAAD,CAASC,GAAE,mBAAcD,EAAME,IAAMC,UAAWN,EAAhD,SAA4DG,EAAMI,UCGxE,EATiB,SAAAJ,GACf,OACE,iBAAKG,UAAWH,EAAMK,KAAtB,WACE,2BAAM,gBAAKC,IAAI,QACdN,EAAMO,Y,uCCEPC,GAAcC,EAAAA,EAAAA,GAAiB,IAiC/BC,GAAmBC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,WAAlBD,EARL,SAACX,GAEjB,OAAO,kBAAMa,SAAUb,EAAMc,aAAtB,WACH,SAACC,EAAA,EAAD,CAAOX,KAAM,oBAAqBY,UAAWC,EAAAA,GAAUC,YAAa,oGAAqBC,SAAU,CAACC,EAAAA,EAAeZ,MACnH,8CAMR,EAjCgB,SAACR,GACb,IACIqB,EAAkBrB,EAAMsB,YAAYC,YAAYC,KAAI,SAACC,EAAGC,GAAJ,OAAU,SAAC,EAAD,CAAqBtB,KAAMqB,EAAErB,KAAMF,GAAIuB,EAAEvB,IAAvBwB,MAChFC,EAAc3B,EAAMsB,YAAYM,aAAaJ,KAAI,SAACK,EAAMH,GAAP,OAAa,SAAC,EAAD,CAAkBnB,QAASsB,EAAKtB,SAAjBmB,MAKjF,OACI,iBAAKvB,UAAWJ,EAAhB,WACI,iBAAKI,UAAWJ,EAAhB,WACI,kCACA,yBAAMsB,QAEV,iBAAKlB,UAAWJ,EAAhB,WACI,qCACA,SAACW,EAAD,CAAkBG,SAfZ,SAACiB,GAAD,OAAc9B,EAAM+B,QAAQD,OAgBlC,yBAAMH,W,uCCdtB,GAAeK,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KARkB,SAACC,GAAD,MAAY,CAACZ,YAAaY,EAAMZ,gBAC7B,SAACa,GACtB,MAAO,CACHJ,QAAS,SAACD,GAAD,OAAcK,GAASC,EAAAA,EAAAA,GAAgCN,SAMpEO,EAAAA,EAFJ,CAGEC,I,gJCZEC,EAA6B,SAAAL,GAAK,MAAK,CAACM,KAAMN,EAAMM,KAAKC,SAElDJ,EAA4B,SAACK,GAAe,IAC7CC,EAD4C,0IAE9C,WACI,OAAKC,KAAK5C,MAAMwC,MACT,SAACE,GAAD,UAAeE,KAAK5C,SADE,SAAC,KAAD,CAAUC,GAAI,eAHD,GAClB4C,EAAAA,WAQhC,OADwBZ,EAAAA,EAAAA,IAAQM,EAARN,CAAoCU","sources":["webpack://my-app/./src/Components/nav/Dialogs/Dialogs.module.css?9ea9","webpack://my-app/./src/Components/nav/Dialogs/UsersDialog/UsersDialogs.module.css?d855","Components/nav/Dialogs/UsersDialog/UsersDialog.jsx","Components/nav/Dialogs/Messages/Messages.jsx","Components/nav/Dialogs/Dialogs.jsx","Components/nav/Dialogs/DialogsContainer.jsx","HOC/WithAuthRedirectComponent.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__7B4nx\",\"dialogsItems\":\"Dialogs_dialogsItems__6OEcD\",\"leftMessages\":\"Dialogs_leftMessages__ouBuo\",\"rightMessages\":\"Dialogs_rightMessages__x9Zuw\",\"messages\":\"Dialogs_messages__x0H+R\"};","// extracted by mini-css-extract-plugin\nexport default {\"active\":\"UsersDialogs_active__yVz2L\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport S from \"./UsersDialogs.module.css\";\r\n\r\nconst setActive = ({ isActive }) => isActive ? S.active : \"\";\r\nconst UsersDialog = props => {\r\n  return (\r\n    <div>\r\n      <NavLink to={`/dialogs/${props.id}`} className={setActive}>{props.name}</NavLink>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default UsersDialog;","import React from \"react\";\r\n\r\nconst Messages = props => {\r\n  return (\r\n    <div className={props.attr}>\r\n      <span><img src=\"#\"/></span>\r\n      {props.message}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Messages;","import S from \"./Dialogs.module.css\"\r\nimport UsersDialog from \"./UsersDialog/UsersDialog\";\r\nimport Messages from \"./Messages/Messages\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { requiredField, maxLengthCreator } from \"../../../Util/Validate/Validate\"\r\nimport { TextArea } from \"../../GlobalComponent/FormControl/FormsControl\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nconst maxLength10 = maxLengthCreator(10); \r\n\r\nconst Dialogs = (props) => {\r\n    let sendMessage = (formData) => props.addPost(formData);\r\n    let userNameMessage = props.messagePage.dialogsData.map((d, i) => <UsersDialog key={i} name={d.name} id={d.id} />);\r\n    let userDialogs = props.messagePage.messagesData.map((item, i) => <Messages key={i} message={item.message} />)\r\n\r\n\r\n    // if (props.auth) return <Navigate to={\"/dialogs/\"} />\r\n\r\n    return (\r\n        <div className={S.dialogs}>\r\n            <div className={S.dialogsItems}>\r\n                <p>Names</p>\r\n                <div>{userNameMessage}</div>\r\n            </div>\r\n            <div className={S.messages}>\r\n                <p>Messages</p>\r\n                <DialogsReduxForm onSubmit={sendMessage} />\r\n                <div>{userDialogs}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DialogsForm = (props) => {\r\n\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <Field name={\"dialogMessageForm\"} component={TextArea} placeholder={\"Введите сообщение\"} validate={[requiredField, maxLength10]} />\r\n        <button>onClick</button>\r\n    </form>\r\n}\r\n\r\nconst DialogsReduxForm = reduxForm({ form: \"message\" })(DialogsForm);\r\n\r\nexport default Dialogs;","import Dialogs from \"./Dialogs\";\r\nimport { ADD_MESSAGE_POST_ACTION_CREATER } from \"../../../Redux/messageReducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { WithAuthRedirectComponent } from \"../../../HOC/WithAuthRedirectComponent\";\r\n    \r\nlet mapStateToProps = (state) => ({messagePage: state.messagePage});\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (formData) => dispatch(ADD_MESSAGE_POST_ACTION_CREATER(formData)),\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    WithAuthRedirectComponent\r\n)(Dialogs);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = state => ({auth: state.auth.isAuth});\r\n\r\nexport let WithAuthRedirectComponent = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.auth) return <Navigate to={\"/login\"} />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let redirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return redirectComponent;\r\n};"],"names":["setActive","isActive","S","props","to","id","className","name","attr","src","message","maxLength10","maxLengthCreator","DialogsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","TextArea","placeholder","validate","requiredField","userNameMessage","messagePage","dialogsData","map","d","i","userDialogs","messagesData","item","formData","addPost","compose","connect","state","dispatch","ADD_MESSAGE_POST_ACTION_CREATER","WithAuthRedirectComponent","Dialogs","mapStateToPropsForRedirect","auth","isAuth","Component","RedirectComponent","this","React"],"sourceRoot":""}